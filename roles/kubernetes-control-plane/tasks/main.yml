---
- name: Check if cluster is already initialized
  stat:
    path: /etc/kubernetes/admin.conf
  register: k8s_admin_conf

- name: Initialize Kubernetes cluster
  command: >
    kubeadm init
    --pod-network-cidr={{ pod_network_cidr }}
    --apiserver-advertise-address={{ ansible_host }}
  when: not k8s_admin_conf.stat.exists
  register: kubeadm_init

- name: Create .kube directory for root
  file:
    path: /root/.kube
    state: directory
    mode: '0755'

- name: Copy admin.conf to root's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: yes
    mode: '0600'

- name: Install Flannel CNI
  command: kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
  when: not k8s_admin_conf.stat.exists

- name: Generate join command
  command: kubeadm token create --print-join-command
  register: join_command_output
  changed_when: false

- name: Save join command to file
  copy:
    content: "{{ join_command_output.stdout }}"
    dest: /tmp/k8s_join_command.sh
    mode: '0755'

- name: Fetch join command to control machine
  fetch:
    src: /tmp/k8s_join_command.sh
    dest: /tmp/k8s_join_command.sh
    flat: yes

- name: Wait for all nodes to be ready
  command: kubectl get nodes
  register: nodes_status
  until: nodes_status.stdout.find("NotReady") == -1
  retries: 30
  delay: 10
  changed_when: false
